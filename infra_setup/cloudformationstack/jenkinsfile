pipeline {
    agent any
    parameters {
        choice(
            name: 'ENV',
            choices: ['demo', 'prod'],
            description: 'Select Target Environment'
        )
    } // parameters
    options {
        buildDiscarder(logRotator(numToKeepStr: '20'))
    } // options
    
    stages {
        stage('Setup Environment') {
            steps {
                script {
                    ENV = params.ENV
                    if (ENV == null || ENV == 'demo') {
                        currentBuild.result = 'ABORTED'
                        error("Invalid or missing Environment: ${ENV}")
                    }
                    echo "Deploying to ${ENV}"
                    ENV_CONF = CONFIG[ENV]
                    AWS_REGION = 'ap-south-1'
                    STACK_NAME = "mkmk-terraformstate"
                } // script
            } // steps
        } // stage
        stage('Deploy') {
            steps {
                withAWS(region: AWS_REGION) {
                    cfnUpdate(
                        stack:"${STACK_NAME}",
                        file:"cloudformationStack/statelockinfra.yml",
                        onFailure:"ROLLBACK",
                        pollInterval:5000,
                        timeoutInMinutes:10,
                        params:[
                            'Prefix': 'tyropower',
                            'Environment': "${ENV}"
                            ]
                        )
                } // withAWS
            } // steps
        } // stage
    } // stages
    post {
        always {
            cleanWs()
        } // always
    } // post
} // pipeline